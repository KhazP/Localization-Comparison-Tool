import 'package:hive/hive.dart';

part 'app_settings.g.dart'; // Will be generated by build_runner

@HiveType(typeId: 2) // Using typeId 2, assuming ComparisonSession is 1 (or other unused ID)
class AppSettings extends HiveObject {
  @HiveField(0)
  String defaultSourceFormat;

  @HiveField(1)
  String defaultTargetFormat;

  @HiveField(2)
  List<String> ignorePatterns;

  @HiveField(3)
  bool ignoreCase;

  @HiveField(4)
  bool ignoreWhitespace;

  @HiveField(5)
  String appLanguage;

  @HiveField(6)
  String defaultViewOnStartup;

  @HiveField(7)
  bool autoCheckForUpdates;

  @HiveField(8)
  String appThemeMode;

  @HiveField(9)
  int accentColorValue;

  @HiveField(10)
  int diffAddedColor;

  @HiveField(11)
  int diffRemovedColor;

  @HiveField(12)
  int diffModifiedColor;

  @HiveField(13)
  String defaultSourceEncoding;

  @HiveField(14)
  String defaultTargetEncoding;

  @HiveField(15)
  bool autoDetectEncoding;

  @HiveField(16)
  String csvDelimiter;

  @HiveField(17)
  bool handleByteOrderMark;

  @HiveField(18)
  bool autoReloadOnChange;

  @HiveField(19)
  String defaultExportDirectory;

  AppSettings({
    required this.defaultSourceFormat,
    required this.defaultTargetFormat,
    required this.ignorePatterns,
    required this.ignoreCase,
    required this.ignoreWhitespace,
    required this.appLanguage,
    required this.defaultViewOnStartup,
    required this.autoCheckForUpdates,
    required this.appThemeMode,
    required this.accentColorValue,
    required this.diffAddedColor,
    required this.diffRemovedColor,
    required this.diffModifiedColor,
    required this.defaultSourceEncoding,
    required this.defaultTargetEncoding,
    required this.autoDetectEncoding,
    required this.csvDelimiter,
    required this.handleByteOrderMark,
    required this.autoReloadOnChange,
    required this.defaultExportDirectory,
  });

  // Default settings
  factory AppSettings.defaultSettings() {
    return AppSettings(
      defaultSourceFormat: 'json',
      defaultTargetFormat: 'json',
      ignorePatterns: ['^//.*', '^#.*'],
      ignoreCase: true,
      ignoreWhitespace: false,
      appLanguage: 'English (US)', // Default for new field
      defaultViewOnStartup: 'Basic Comparison', // Default for new field
      autoCheckForUpdates: true, // Default for new field
      appThemeMode: 'System', // Default for new field
      accentColorValue: 0xFF7B61FF, // Default for new field (Color(0xFF7B61FF).value)
      diffAddedColor: 0xFF4CAF50, // Material Green
      diffRemovedColor: 0xFFF44336, // Material Red
      diffModifiedColor: 0xFFFFC107, // Material Amber
      defaultSourceEncoding: 'UTF-8',
      defaultTargetEncoding: 'UTF-8',
      autoDetectEncoding: true,
      csvDelimiter: ',',
      handleByteOrderMark: true,
      autoReloadOnChange: true,
      defaultExportDirectory: '',
    );
  }

  // From JSON
  factory AppSettings.fromJson(Map<String, dynamic> json) {
    return AppSettings(
      defaultSourceFormat: json['defaultSourceFormat'] as String,
      defaultTargetFormat: json['defaultTargetFormat'] as String,
      ignorePatterns: List<String>.from(json['ignorePatterns']),
      ignoreCase: json['ignoreCase'] as bool,
      ignoreWhitespace: json['ignoreWhitespace'] as bool,
      appLanguage: json['appLanguage'] as String,
      defaultViewOnStartup: json['defaultViewOnStartup'] as String,
      autoCheckForUpdates: json['autoCheckForUpdates'] as bool,
      appThemeMode: json['appThemeMode'] as String,
      accentColorValue: json['accentColorValue'] as int,
      diffAddedColor: json['diffAddedColor'] as int,
      diffRemovedColor: json['diffRemovedColor'] as int,
      diffModifiedColor: json['diffModifiedColor'] as int,
      defaultSourceEncoding: json['defaultSourceEncoding'] as String,
      defaultTargetEncoding: json['defaultTargetEncoding'] as String,
      autoDetectEncoding: json['autoDetectEncoding'] as bool,
      csvDelimiter: json['csvDelimiter'] as String,
      handleByteOrderMark: json['handleByteOrderMark'] as bool,
      autoReloadOnChange: json['autoReloadOnChange'] as bool,
      defaultExportDirectory: json['defaultExportDirectory'] as String,
    );
  }

  // To JSON
  Map<String, dynamic> toJson() {
    return {
      'defaultSourceFormat': defaultSourceFormat,
      'defaultTargetFormat': defaultTargetFormat,
      'ignorePatterns': ignorePatterns,
      'ignoreCase': ignoreCase,
      'ignoreWhitespace': ignoreWhitespace,
      'appLanguage': appLanguage,
      'defaultViewOnStartup': defaultViewOnStartup,
      'autoCheckForUpdates': autoCheckForUpdates,
      'appThemeMode': appThemeMode,
      'accentColorValue': accentColorValue,
      'diffAddedColor': diffAddedColor,
      'diffRemovedColor': diffRemovedColor,
      'diffModifiedColor': diffModifiedColor,
      'defaultSourceEncoding': defaultSourceEncoding,
      'defaultTargetEncoding': defaultTargetEncoding,
      'autoDetectEncoding': autoDetectEncoding,
      'csvDelimiter': csvDelimiter,
      'handleByteOrderMark': handleByteOrderMark,
      'autoReloadOnChange': autoReloadOnChange,
      'defaultExportDirectory': defaultExportDirectory,
    };
  }

  AppSettings copyWith({
    String? defaultSourceFormat,
    String? defaultTargetFormat,
    List<String>? ignorePatterns,
    bool? ignoreCase,
    bool? ignoreWhitespace,
    String? appLanguage,
    String? defaultViewOnStartup,
    bool? autoCheckForUpdates,
    String? appThemeMode,
    int? accentColorValue,
    int? diffAddedColor,
    int? diffRemovedColor,
    int? diffModifiedColor,
    String? defaultSourceEncoding,
    String? defaultTargetEncoding,
    bool? autoDetectEncoding,
    String? csvDelimiter,
    bool? handleByteOrderMark,
    bool? autoReloadOnChange,
    String? defaultExportDirectory,
  }) {
    return AppSettings(
      defaultSourceFormat: defaultSourceFormat ?? this.defaultSourceFormat,
      defaultTargetFormat: defaultTargetFormat ?? this.defaultTargetFormat,
      ignorePatterns: ignorePatterns ?? this.ignorePatterns,
      ignoreCase: ignoreCase ?? this.ignoreCase,
      ignoreWhitespace: ignoreWhitespace ?? this.ignoreWhitespace,
      appLanguage: appLanguage ?? this.appLanguage,
      defaultViewOnStartup: defaultViewOnStartup ?? this.defaultViewOnStartup,
      autoCheckForUpdates: autoCheckForUpdates ?? this.autoCheckForUpdates,
      appThemeMode: appThemeMode ?? this.appThemeMode,
      accentColorValue: accentColorValue ?? this.accentColorValue,
      diffAddedColor: diffAddedColor ?? this.diffAddedColor,
      diffRemovedColor: diffRemovedColor ?? this.diffRemovedColor,
      diffModifiedColor: diffModifiedColor ?? this.diffModifiedColor,
      defaultSourceEncoding: defaultSourceEncoding ?? this.defaultSourceEncoding,
      defaultTargetEncoding: defaultTargetEncoding ?? this.defaultTargetEncoding,
      autoDetectEncoding: autoDetectEncoding ?? this.autoDetectEncoding,
      csvDelimiter: csvDelimiter ?? this.csvDelimiter,
      handleByteOrderMark: handleByteOrderMark ?? this.handleByteOrderMark,
      autoReloadOnChange: autoReloadOnChange ?? this.autoReloadOnChange,
      defaultExportDirectory: defaultExportDirectory ?? this.defaultExportDirectory,
    );
  }
} 
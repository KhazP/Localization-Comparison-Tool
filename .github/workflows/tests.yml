name: Python Tests and Linting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    
    - name: Fix Git permissions
      run: git config --global --add safe.directory "${GITHUB_WORKSPACE}"
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Fix requirements.txt
        sed -i '1d' requirements.txt  # Remove the first line with filepath comment
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: List installed packages
      run: pip list
    
    - name: Check Python version
      run: |
        python --version
        pip --version
    
    - name: Run tests with coverage
      run: |
        python -m pytest --cov=. --cov-report=xml -v
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Fix Git permissions
      run: git config --global --add safe.directory "${GITHUB_WORKSPACE}"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Fix requirements.txt
        sed -i '1d' requirements.txt  # Remove the first line with filepath comment
        pip install -r requirements.txt
        pip install pylint
    
    - name: Create pylintrc
      run: |
        cat > .pylintrc << EOL
[MASTER]
init-hook='import sys; sys.path.append(".")'

[MESSAGES CONTROL]
disable=import-error,invalid-name,missing-docstring,line-too-long,too-many-instance-attributes,too-many-arguments

[FORMAT]
max-line-length=120
EOL
    
    - name: List installed packages
      run: pip list
    
    - name: Run pylint
      run: |
        PYTHONPATH=$PYTHONPATH:$(pwd) pylint --jobs=0 ./GUI ./MixedParser
